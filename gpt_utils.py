from openai import OpenAI
import json
from dotenv import load_dotenv
import os

# Loading environment variables
load_dotenv()

# Getting API Key from the environment
client = OpenAI(
    api_key=os.getenv("OPENAI_API_KEY")
)

def generate_sales_article(json_input):
    """
    This function reads the scraped JSON file, processes it with GPT, and generates an article for the sales team.

    Args:
        json_input (str): JSON file containing the scraped website data.

    Returns:
        Article generated by GPT model  
    """

    try:
        # Loading JSON file
        with open(json_input, "r", encoding='utf-8') as file:
            data = json.load(file)

        # Prompt for GPT
        prompt = f"""

        Based on the following company information, write a concise, informative, article for the sales team.
        Focus on key aspects such as the company's purpose, offerings, and notable features:
        
        {data}
        
        Ensure the article highlights the most relevant information for a sales pitch.
        """

        # Generating article using GPT 4
        response = client.chat.completions.create(
            model = "gpt-4",
            messages = [
                {"role": "system", 
                 "content": "You are a professional assistant helping to write sales articles."},

                 {"role": "user",
                  "content": prompt}
            ]
        )

        article = response.choices[0].message.content

        # Saving article to a text file
        with open("sales_article.txt", "w", encoding='utf-8') as file:
            file.write(article)

        print("Article generated and saved to 'sales_article.txt' file")
        return article
    
    except Exception as e:
        print(f"Error generating article: {e}")
        return None
    
if __name__ == "__main__":
    json_file_path = "scraped_data.json"
    article = generate_sales_article(json_file_path)
    if article:
        print("Article:")
        print(article)
